#!/usr/bin/env ruby
# frozen_string_literal: true

require 'readline'

require 'rpl'

class RplRepl
  def initialize( interpreter )
    interpreter ||= Rpl.new
    @interpreter = interpreter
  end

  def run
    print_stack unless @interpreter.stack.empty?

    Readline.completion_proc = proc do |s|
      ( @interpreter.dictionary.words.keys + @interpreter.dictionary.vars.keys ).grep(/^#{Regexp.escape(s)}/)
    end
    Readline.completion_append_character = ' '

    loop do
      input = Readline.readline( 'ïƒš ', true )
      break if input.nil? || input == 'quit'

      pp Readline::HISTORY if input == 'history'

      # Remove blank lines from history
      Readline::HISTORY.pop if input.empty?

      begin
        @interpreter.run( input )
      rescue ArgumentError => e
        p e
      end

      print_stack
    end
  end

  def format_element( elt )
    @interpreter.stringify( elt )
  end

  def print_stack
    stack_size = @interpreter.stack.size

    @interpreter.stack.each_with_index do |elt, i|
      puts "#{stack_size - i}: #{format_element( elt )}"
    end
  end
end

RplRepl.new.run
